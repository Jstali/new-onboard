-- Auto-generated schema from shibin.sql
-- Generated for PostgreSQL

SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;

CREATE TABLE IF NOT EXISTS adp_payroll (
    id SERIAL PRIMARY KEY,
    employee_id INTEGER,
    name_prefix VARCHAR(255),
    employee_full_name VARCHAR(255),
    given_or_first_name VARCHAR(255),
    middle_name VARCHAR(255),
    last_name VARCHAR(255),
    joining_date DATE,
    payroll_starting_month TEXT,
    dob DATE,
    aadhar TEXT,
    name_as_per_aadhar VARCHAR(255),
    designation_description TEXT,
    email VARCHAR(255),
    alternate_email VARCHAR(255),
    pan TEXT,
    name_as_per_pan VARCHAR(255),
    gender TEXT,
    department_description TEXT,
    work_location TEXT,
    labour_state_description TEXT,
    lwf_designation TEXT,
    lwf_relationship TEXT,
    lwf_id INTEGER,
    professional_tax_group_description TEXT,
    pf_computational_group TEXT,
    mobile_number VARCHAR(20),
    phone_number1 VARCHAR(20),
    phone_number2 VARCHAR(20),
    address1 TEXT,
    address2 TEXT,
    address3 TEXT,
    city TEXT,
    state TEXT,
    pincode VARCHAR(20),
    country TEXT,
    nationality TEXT,
    iw_nationality TEXT,
    iw_city TEXT,
    iw_country TEXT,
    coc_issuing_authority TEXT,
    coc_issue_date DATE,
    coc_from_date DATE,
    coc_upto_date DATE,
    bank_name VARCHAR(255),
    name_as_per_bank VARCHAR(255),
    account_no TEXT,
    bank_ifsc_code TEXT,
    payment_mode VARCHAR(50),
    pf_account_no TEXT,
    esi_account_no TEXT,
    esi_above_wage_limit BOOLEAN,
    uan TEXT,
    branch_description TEXT,
    enrollment_id INTEGER,
    manager_employee_id INTEGER,
    tax_regime TEXT,
    father_name VARCHAR(255),
    mother_name VARCHAR(255),
    spouse_name VARCHAR(255),
    marital_status TEXT,
    number_of_children INTEGER,
    disability_status TEXT,
    type_of_disability TEXT,
    employment_type TEXT,
    grade_description TEXT,
    cadre_description TEXT,
    payment_description TEXT,
    attendance_description TEXT,
    workplace_description TEXT,
    band TEXT,
    level TEXT,
    work_cost_center TEXT,
    custom_group_1 TEXT,
    custom_group_2 TEXT,
    custom_group_3 TEXT,
    custom_group_4 TEXT,
    custom_group_5 TEXT,
    passport_number TEXT,
    passport_issue_date DATE,
    passport_valid_upto TEXT,
    passport_issued_country TEXT,
    visa_issuing_authority TEXT,
    visa_from_date DATE,
    visa_upto_date DATE,
    already_member_in_pf BOOLEAN,
    already_member_in_pension BOOLEAN,
    withdrawn_pf_and_pension BOOLEAN,
    international_worker_status TEXT,
    relationship_for_pf TEXT,
    qualification TEXT,
    driving_licence_number TEXT,
    driving_licence_valid_date DATE,
    pran_number TEXT,
    rehire TEXT,
    old_employee_id INTEGER,
    is_non_payroll_employee BOOLEAN,
    category_name VARCHAR(255),
    custom_master_name VARCHAR(255),
    custom_master_name2 VARCHAR(255),
    custom_master_name3 VARCHAR(255),
    ot_eligibility BOOLEAN,
    auto_shift_eligibility BOOLEAN,
    mobile_user BOOLEAN,
    web_punch BOOLEAN,
    attendance_exception_eligibility BOOLEAN,
    attendance_exception_type TEXT,
    is_draft BOOLEAN,
    created_at TIMESTAMP,
    updated_at DATE
);

CREATE TABLE IF NOT EXISTS attendance (
    id SERIAL PRIMARY KEY,
    employee_id INTEGER,
    date DATE,
    status VARCHAR(50),
    reason TEXT,
    clock_in_time TEXT,
    clock_out_time TEXT,
    created_at TIMESTAMP,
    updated_at DATE,
    hours DECIMAL(4,2)
);

CREATE TABLE IF NOT EXISTS attendance_settings (
    id SERIAL PRIMARY KEY,
    setting_key TEXT,
    setting_value TEXT,
    description TEXT,
    created_at TIMESTAMP,
    updated_at DATE
);

CREATE TABLE IF NOT EXISTS comp_off_balances (
    id SERIAL PRIMARY KEY,
    employee_id INTEGER,
    year INTEGER,
    total_earned DECIMAL(10,2),
    comp_off_taken DECIMAL(10,2),
    comp_off_remaining DECIMAL(10,2),
    created_at TIMESTAMP,
    updated_at DATE
);

CREATE TABLE IF NOT EXISTS company_emails (
    id SERIAL PRIMARY KEY,
    user_id INTEGER,
    manager_id INTEGER,
    company_email VARCHAR(255),
    is_primary BOOLEAN,
    is_active BOOLEAN,
    created_at TIMESTAMP,
    updated_at DATE
);

CREATE TABLE IF NOT EXISTS departments (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255),
    code VARCHAR(20),
    description TEXT,
    manager_id INTEGER,
    is_active BOOLEAN,
    created_at TIMESTAMP,
    updated_at DATE
);

CREATE TABLE IF NOT EXISTS document_collection (
    id SERIAL PRIMARY KEY,
    employee_id INTEGER,
    employee_name VARCHAR(255),
    emp_id INTEGER,
    department TEXT,
    join_date DATE,
    due_date DATE,
    document_name VARCHAR(255),
    document_type TEXT,
    status VARCHAR(50),
    notes TEXT,
    uploaded_file_url VARCHAR(500),
    uploaded_file_name VARCHAR(255),
    uploaded_at TIMESTAMP,
    created_at TIMESTAMP,
    updated_at DATE,
    resend_count INTEGER,
    last_resend_date DATE,
    employee_id_numeric TEXT
);

CREATE TABLE IF NOT EXISTS document_reminder_mails (
    id SERIAL PRIMARY KEY,
    employee_id INTEGER,
    employee_email VARCHAR(255),
    employee_name VARCHAR(255),
    sent_by_hr_id INTEGER,
    sent_by_hr_name VARCHAR(255),
    sent_at TIMESTAMP,
    document_upload_link TEXT,
    status VARCHAR(50),
    created_at TIMESTAMP
);

CREATE TABLE IF NOT EXISTS document_templates (
    id SERIAL PRIMARY KEY,
    document_name VARCHAR(255),
    document_type TEXT,
    description TEXT,
    is_active BOOLEAN,
    created_at TIMESTAMP,
    updated_at DATE,
    category VARCHAR(50),
    is_required BOOLEAN,
    allow_multiple BOOLEAN
);

CREATE TABLE IF NOT EXISTS documents (
    id SERIAL PRIMARY KEY,
    employee_id INTEGER,
    document_type TEXT,
    file_name VARCHAR(255),
    file_path VARCHAR(500),
    file_size INTEGER,
    mime_type TEXT,
    status VARCHAR(50),
    uploaded_by TEXT,
    reviewed_by TEXT,
    reviewed_at TIMESTAMP,
    review_notes TEXT,
    created_at TIMESTAMP,
    updated_at DATE
);

CREATE TABLE IF NOT EXISTS employee_documents (
    id SERIAL PRIMARY KEY,
    employee_id INTEGER,
    document_type TEXT,
    document_category TEXT,
    file_name VARCHAR(255),
    file_url VARCHAR(500),
    file_size INTEGER,
    mime_type TEXT,
    is_required BOOLEAN,
    uploaded_at TIMESTAMP,
    updated_at DATE,
    resend_count INTEGER,
    last_resend_date DATE,
    status VARCHAR(50)
);

CREATE TABLE IF NOT EXISTS employee_forms (
    id SERIAL PRIMARY KEY,
    employee_id INTEGER,
    type VARCHAR(50),
    form_data JSONB,
    files JSONB,
    status VARCHAR(50),
    submitted_at TIMESTAMP,
    updated_at DATE,
    reviewed_by TEXT,
    reviewed_at TIMESTAMP,
    review_notes TEXT,
    draft_data JSONB,
    documents_uploaded JSONB,
    assigned_manager TEXT,
    manager2_name VARCHAR(255),
    manager3_name VARCHAR(255),
    employee_type TEXT
);

CREATE TABLE IF NOT EXISTS employee_master (
    id SERIAL PRIMARY KEY,
    employee_id INTEGER,
    employee_name VARCHAR(255),
    company_email VARCHAR(255),
    manager_id INTEGER,
    manager_name VARCHAR(255),
    type VARCHAR(50),
    role VARCHAR(50),
    doj DATE,
    status VARCHAR(50),
    department TEXT,
    designation TEXT,
    salary_band TEXT,
    location TEXT,
    created_at TIMESTAMP,
    updated_at DATE,
    department_id INTEGER,
    manager2_id INTEGER,
    manager2_name VARCHAR(255),
    manager3_id INTEGER,
    manager3_name VARCHAR(255),
    employee_id_numeric TEXT,
    manager_id_numeric TEXT,
    manager2_id_numeric TEXT,
    manager3_id_numeric TEXT,
    email VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS employees_combined (
    id SERIAL PRIMARY KEY,
    employee_id INTEGER,
    employee_name VARCHAR(255),
    company_email VARCHAR(255),
    manager_id INTEGER,
    manager_name VARCHAR(255),
    manager2_id INTEGER,
    manager2_name VARCHAR(255),
    manager3_id INTEGER,
    manager3_name VARCHAR(255),
    type VARCHAR(50),
    role VARCHAR(50),
    doj DATE,
    status VARCHAR(50),
    department TEXT,
    designation TEXT,
    salary_band TEXT,
    location TEXT,
    name_prefix VARCHAR(255),
    employee_full_name VARCHAR(255),
    given_or_first_name VARCHAR(255),
    middle_name VARCHAR(255),
    last_name VARCHAR(255),
    joining_date DATE,
    payroll_starting_month TEXT,
    dob DATE,
    aadhar TEXT,
    name_as_per_aadhar VARCHAR(255),
    designation_description TEXT,
    email VARCHAR(255),
    alternate_email VARCHAR(255),
    pan TEXT,
    name_as_per_pan VARCHAR(255),
    gender TEXT,
    department_description TEXT,
    work_location TEXT,
    labour_state_description TEXT,
    lwf_designation TEXT,
    lwf_relationship TEXT,
    lwf_id INTEGER,
    professional_tax_group_description TEXT,
    pf_computational_group TEXT,
    mobile_number VARCHAR(20),
    phone_number1 VARCHAR(20),
    phone_number2 VARCHAR(20),
    address1 TEXT,
    address2 TEXT,
    address3 TEXT,
    city TEXT,
    state TEXT,
    pincode VARCHAR(20),
    country TEXT,
    nationality TEXT,
    iw_nationality TEXT,
    iw_city TEXT,
    iw_country TEXT,
    coc_issuing_authority TEXT,
    coc_issue_date DATE,
    coc_from_date DATE,
    coc_upto_date DATE,
    bank_name VARCHAR(255),
    name_as_per_bank VARCHAR(255),
    account_no TEXT,
    bank_ifsc_code TEXT,
    payment_mode VARCHAR(50),
    pf_account_no TEXT,
    esi_account_no TEXT,
    esi_above_wage_limit BOOLEAN,
    disability_status TEXT,
    already_member_in_pf BOOLEAN,
    pf_opt_out BOOLEAN,
    esi_opt_out BOOLEAN,
    international_worker_status TEXT,
    relationship_for_pf TEXT,
    qualification TEXT,
    driving_licence_number TEXT,
    driving_licence_valid_date DATE,
    pran_number TEXT,
    rehire TEXT,
    old_employee_id INTEGER,
    is_non_payroll_employee BOOLEAN,
    category_name VARCHAR(255),
    custom_master_name VARCHAR(255),
    custom_master_name2 VARCHAR(255),
    custom_master_name3 VARCHAR(255),
    ot_eligibility BOOLEAN,
    auto_shift_eligibility BOOLEAN,
    mobile_user BOOLEAN,
    web_punch BOOLEAN,
    attendance_exception_eligibility BOOLEAN,
    attendance_exception_type TEXT,
    is_draft BOOLEAN,
    created_at TIMESTAMP,
    updated_at DATE
);

CREATE TABLE IF NOT EXISTS expense_attachments (
    id SERIAL PRIMARY KEY,
    expense_id INTEGER,
    file_name VARCHAR(255),
    file_url VARCHAR(500),
    file_size INTEGER,
    mime_type TEXT,
    uploaded_at TIMESTAMP
);

CREATE TABLE IF NOT EXISTS expense_categories (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255),
    description TEXT,
    is_active BOOLEAN,
    created_at TIMESTAMP,
    updated_at DATE
);

CREATE TABLE IF NOT EXISTS expense_requests (
    id SERIAL PRIMARY KEY,
    employee_id INTEGER,
    category_id INTEGER,
    amount DECIMAL(10,2),
    description TEXT,
    expense_date DATE,
    receipt_url VARCHAR(500),
    status VARCHAR(50),
    approved_by TEXT,
    approved_at TIMESTAMP,
    approval_notes TEXT,
    created_at TIMESTAMP,
    updated_at DATE
);

CREATE TABLE IF NOT EXISTS expenses (
    id SERIAL PRIMARY KEY,
    series VARCHAR(255),
    employee_id INTEGER,
    employee_name VARCHAR(255),
    expense_category TEXT,
    expense_type TEXT,
    other_category TEXT,
    amount DECIMAL(10,2),
    currency VARCHAR(50),
    description TEXT,
    attachment_url VARCHAR(500),
    attachment_name VARCHAR(255),
    expense_date DATE,
    project_reference TEXT,
    payment_mode VARCHAR(50),
    tax_included BOOLEAN,
    total_reimbursable DECIMAL(10,2),
    status VARCHAR(50),
    manager1_id INTEGER,
    manager1_name VARCHAR(255),
    manager1_status TEXT,
    manager1_approved_at TIMESTAMP,
    manager1_approval_notes TEXT,
    manager2_id INTEGER,
    manager2_name VARCHAR(255),
    manager2_status TEXT,
    manager2_approved_at TIMESTAMP,
    manager2_approval_notes TEXT,
    manager3_id INTEGER,
    manager3_name VARCHAR(255),
    manager3_status TEXT,
    manager3_approved_at TIMESTAMP,
    manager3_approval_notes TEXT,
    hr_id INTEGER,
    hr_name VARCHAR(255),
    hr_approved_at TIMESTAMP,
    hr_approval_notes TEXT,
    approval_token VARCHAR(255),
    created_at TIMESTAMP,
    updated_at DATE,
    client_code TEXT
);

CREATE TABLE IF NOT EXISTS leave_balances (
    id SERIAL PRIMARY KEY,
    employee_id INTEGER,
    year INTEGER,
    total_allocated DECIMAL(10,2),
    leaves_taken DECIMAL(10,2),
    leaves_remaining DECIMAL(10,2),
    created_at TIMESTAMP,
    updated_at DATE
);

CREATE TABLE IF NOT EXISTS leave_requests (
    id SERIAL PRIMARY KEY,
    series VARCHAR(255),
    employee_id INTEGER,
    employee_name VARCHAR(255),
    leave_type TEXT,
    leave_balance_before DECIMAL(10,2),
    from_date DATE,
    to_date DATE,
    half_day BOOLEAN,
    total_leave_days DECIMAL(10,2),
    reason TEXT,
    status VARCHAR(50),
    manager_approved_at TIMESTAMP,
    manager_approval_notes TEXT,
    hr_id INTEGER,
    hr_name VARCHAR(255),
    hr_approved_at TIMESTAMP,
    hr_approval_notes TEXT,
    approval_token VARCHAR(255),
    created_at TIMESTAMP,
    updated_at DATE,
    manager1_id INTEGER,
    manager1_name VARCHAR(255),
    manager1_status TEXT,
    manager2_id INTEGER,
    manager2_name VARCHAR(255),
    manager2_status TEXT,
    manager3_id INTEGER,
    manager3_name VARCHAR(255),
    manager3_status TEXT,
    approved_by TEXT,
    approved_at TIMESTAMP,
    approval_notes TEXT,
    role VARCHAR(50)
);

CREATE TABLE IF NOT EXISTS leave_type_balances (
    id SERIAL PRIMARY KEY,
    employee_id INTEGER,
    year INTEGER,
    leave_type TEXT,
    total_allocated DECIMAL(10,2),
    leaves_taken DECIMAL(10,2),
    leaves_remaining DECIMAL(10,2),
    created_at TIMESTAMP,
    updated_at DATE
);

CREATE TABLE IF NOT EXISTS leave_types (
    id SERIAL PRIMARY KEY,
    type_name VARCHAR(255),
    description TEXT,
    color TEXT,
    created_at TIMESTAMP,
    updated_at DATE,
    max_days INTEGER,
    is_active BOOLEAN
);

CREATE TABLE IF NOT EXISTS manager_employee_mapping (
    id SERIAL PRIMARY KEY,
    manager_id INTEGER,
    employee_id INTEGER,
    mapping_type TEXT,
    is_active BOOLEAN,
    created_at TIMESTAMP,
    updated_at DATE
);

CREATE TABLE IF NOT EXISTS managers (
    id SERIAL PRIMARY KEY,
    manager_id INTEGER,
    manager_name VARCHAR(255),
    email VARCHAR(255),
    department TEXT,
    designation TEXT,
    status VARCHAR(50),
    created_at TIMESTAMP,
    updated_at DATE,
    user_id INTEGER,
    manager_id_numeric TEXT
);

CREATE TABLE IF NOT EXISTS migration_log (
    id SERIAL PRIMARY KEY,
    migration_name VARCHAR(255),
    executed_at TIMESTAMP,
    status VARCHAR(50),
    details TEXT
);

CREATE TABLE IF NOT EXISTS onboarded_employees (
    id SERIAL PRIMARY KEY,
    user_id INTEGER,
    employee_id INTEGER,
    company_email VARCHAR(255),
    manager_id INTEGER,
    manager_name VARCHAR(255),
    assigned_by TEXT,
    assigned_at TIMESTAMP,
    status VARCHAR(50),
    notes TEXT,
    created_at TIMESTAMP,
    updated_at DATE,
    employee_type TEXT,
    employee_id_numeric TEXT,
    manager_id_numeric TEXT
);

CREATE TABLE IF NOT EXISTS onboarding (
    id SERIAL PRIMARY KEY,
    onboarding_quarter TEXT,
    employment_type TEXT,
    status VARCHAR(50),
    employee_id INTEGER,
    employee_full_name VARCHAR(255),
    dob DATE,
    gender TEXT,
    mobile_number VARCHAR(20),
    email VARCHAR(255),
    alternate_email VARCHAR(255),
    joining_date DATE,
    month_year TEXT,
    reporting_manager_l1 TEXT,
    reporting_manager_l2 TEXT,
    bu TEXT,
    title TEXT,
    skill TEXT,
    level TEXT,
    bands TEXT,
    accommodation TEXT,
    onboarding_type TEXT,
    pre_onboarding_email TEXT,
    new_joinee_forms_filled TEXT,
    buddy_email_sent TEXT,
    update_bu_heads DATE,
    current_bank_account TEXT,
    communication_bu_team TEXT,
    hr_welcome_email TEXT,
    new_joinee_announcement TEXT,
    joining_kit TEXT,
    internal_systems TEXT,
    seating_area TEXT,
    access_card TEXT,
    photo_shared_admin TEXT,
    attendance_added TEXT,
    orientation_induction TEXT,
    induction_feedback TEXT,
    bgv_consent_form TEXT,
    offer_appointment_letter TEXT,
    nda TEXT,
    epf TEXT,
    employee_verification_form TEXT,
    insurance_form TEXT,
    id_proofs TEXT,
    emergency_contacts TEXT,
    bgv_initiated TEXT,
    bgv_report TEXT,
    education_docs TEXT,
    employment_docs_offer_relieving TEXT,
    employment_docs_compensation TEXT,
    employment_docs_payslips TEXT,
    offer_fitment_email TEXT,
    resume TEXT,
    bgv TEXT,
    enzen_signed_docs TEXT,
    exit_form TEXT,
    bu_sign_off TEXT,
    it_sign_off TEXT,
    admin_sign_off TEXT,
    pnc_sign_off TEXT,
    assets TEXT,
    release_doc_sign TEXT,
    rel_docs TEXT,
    fnf TEXT,
    exit_docs_uploaded TEXT,
    pnc_remarks TEXT,
    created_at TIMESTAMP,
    updated_at DATE,
    created_by TEXT,
    updated_by DATE,
    offer_letter_doc TEXT,
    nda_doc TEXT,
    epf_doc TEXT,
    insurance_form_doc TEXT,
    id_proofs_doc TEXT,
    bgv_consent_form_doc TEXT,
    bgv_report_doc TEXT,
    education_docs_doc TEXT,
    employment_docs_doc TEXT,
    resume_doc TEXT,
    passport_doc TEXT,
    visa_doc TEXT,
    driving_license_doc TEXT,
    documents_uploaded_at TIMESTAMP,
    documents_uploaded_by TEXT,
    employee_id_numeric TEXT
);

CREATE TABLE IF NOT EXISTS pnc_monitoring_breakdowns (
    id SERIAL PRIMARY KEY,
    report_id INTEGER,
    breakdown_type TEXT,
    category_name VARCHAR(255),
    category_value TEXT,
    count INTEGER,
    percentage INTEGER,
    created_at TIMESTAMP
);

CREATE TABLE IF NOT EXISTS pnc_monitoring_reports (
    id SERIAL PRIMARY KEY,
    report_month TEXT,
    report_year TEXT,
    report_month_number TEXT,
    total_headcount TEXT,
    total_contractors TEXT,
    total_leavers TEXT,
    future_joiners TEXT,
    total_vacancies TEXT,
    average_age TEXT,
    average_tenure TEXT,
    disability_percentage TEXT,
    attrition_percentage TEXT,
    report_data JSONB,
    generated_at TIMESTAMP,
    generated_by TEXT,
    is_active BOOLEAN
);

CREATE TABLE IF NOT EXISTS recruitment_requisitions (
    id SERIAL PRIMARY KEY,
    requisition_id INTEGER,
    job_title TEXT,
    department TEXT,
    location TEXT,
    employment_type TEXT,
    status VARCHAR(50),
    priority VARCHAR(50),
    min_experience INTEGER,
    max_experience INTEGER,
    required_skills JSONB,
    preferred_skills JSONB,
    posted_date DATE,
    closing_date DATE,
    filled_date DATE,
    hiring_manager_id INTEGER,
    assigned_recruiter_id INTEGER,
    created_at TIMESTAMP,
    updated_at DATE,
    created_by TEXT
);

CREATE TABLE IF NOT EXISTS relations (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255),
    is_active BOOLEAN,
    created_at TIMESTAMP
);

CREATE TABLE IF NOT EXISTS system_settings (
    id SERIAL PRIMARY KEY,
    total_annual_leaves TEXT,
    allow_half_day BOOLEAN,
    approval_workflow TEXT,
    created_at TIMESTAMP,
    updated_at DATE
);

CREATE TABLE IF NOT EXISTS users (
    id SERIAL PRIMARY KEY,
    email VARCHAR(255),
    password VARCHAR(255),
    role VARCHAR(50),
    temp_password TEXT,
    first_name VARCHAR(255),
    last_name VARCHAR(255),
    phone VARCHAR(20),
    address TEXT,
    emergency_contact_name VARCHAR(255),
    emergency_contact_phone VARCHAR(20),
    emergency_contact_relationship TEXT,
    created_at TIMESTAMP,
    updated_at DATE,
    emergency_contact_name2 VARCHAR(255),
    emergency_contact_phone2 VARCHAR(20),
    emergency_contact_relationship2 TEXT,
    is_first_login BOOLEAN
);

